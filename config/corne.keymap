/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | ENTR |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RSHIT|
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E  &kp R  &kp T    &kp Y      &kp U      &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D  &kp F  &kp G    &kp H      &kp J      &kp K      &kp L    &kp SEMI  &kp ENTER
&kp LSHFT  &kp Z  &kp X  &kp C  &kp V  &kp B    &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                         &mo 3  &mo 2  &mo 1    &kp SPACE  &kp RCTRL  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |     |     |     |     |     |   |     |     |  UP |     |     | BSPC |
            // | LALT | ESC |     |     |     |     |   |     | LFT | DWN | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |VOLDN|VOLUP| MUTE |
            //                    |     |     |     |   |     |     |     |

            bindings = <
&kp TAB    &kp Y       &kp U   &kp I           &kp O   &kp P            &trans  &trans          &kp UP_ARROW    &trans           &trans             &kp BSPC
&kp LALT   &kp H       &kp J   &kp K           &kp L   &kp SEMI         &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans             &trans
&kp LSHFT  &kp N       &kp M   &kp COMMA       &kp DOT &kp FSLH         &trans  &trans          &trans          &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &kp K_MUTE
                               &trans          &trans  &trans           &kp ESCAPE  &trans          &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  '   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  |  ;  |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp SINGLE_QUOTE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp SEMICOLON  &kp GRAVE
                             &trans    &trans    &trans       &trans     &trans     &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_PLUS   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &kp KP_EQUAL
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_MINUS  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans        &trans
&bt BT_CLR  &trans  &trans  &trans  &trans  &trans    &kp KP_DOT    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans        &trans
                        &trans  &trans  &trans    &trans        &trans        &trans
            >;
        };
    };
};
